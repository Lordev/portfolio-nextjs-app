.link {
    position: relative;
}

.link::after {
    content: "";
    background-image: linear-gradient(
        to right,
        transparent 0%,
        #f59e0b 50%,
        transparent 100%
    );
    height: 2px;
    position: absolute;
    width: 0px;
    bottom: -0.2rem;
    right: 50%;
    transform: translateX(50%);
    opacity: 1;
    transition: width ease 0.2s;
}

.link:hover::after {
    opacity: 1;
    width: 100%;
}

.icon:hover {
    color: #fff;
    /* background-color: #fff; */
}

.slide-container {
    flex: none;
}

.slide {
    transition: transform ease 1s;
}

.carousel-wrapper {
    display: flex;
    overflow: hidden;
    gap: 50px;
}

.carousel {
    position: relative;
    padding: 0 2rem;
}

.button-next,
.button-prev {
    position: absolute;
    bottom: 50%;
    font-size: 2rem;
    color: white;
    opacity: 0.1;
    z-index: 5;
    background-color: gray;
    border-radius: 50%;
    height: 5rem;
    width: 5rem;
    margin: auto;
}

.button-next:hover,
.button-prev:hover {
    opacity: 0.5;
}

.button-next {
    right: 0;
}

.button-prev {
    left: 0;
}

.slide-text {
    display: flex;
    flex-direction: column;
    padding-left: 10%;
    transition: transform ease 0.7s;
}

.progress-circle {
    width: 120px;
    height: 120px;
    position: relative;
    clip-path: inset(0 0% 0 0);
    /* Adjust the clippin  path as needed */
    transition: clip-path 1s ease;
}

.progress-circle svg {
    transform: rotate(-90deg);
    width: 120px;
    height: 120px;
}

.progress-circle .progress-ring__circle {
    transition: stroke-dashoffset 1.2s ease;
}

.progress-circle .progress-circle__text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    color: white;
    transition: all 1.2s ease;
}

.animate-bouncy:hover {
    animation: wobble 0.5s ease-in-out;
}

@keyframes wobble {
    0% {
        transform: translateX(0);
    }

    20% {
        transform: translateX(-5px) rotate(-2deg);
    }

    40% {
        transform: translateX(5px) rotate(2deg);
    }

    60% {
        transform: translateX(-5px) rotate(-2deg);
    }

    80% {
        transform: translateX(5px) rotate(2deg);
    }

    100% {
        transform: translateX(0);
    }
}
